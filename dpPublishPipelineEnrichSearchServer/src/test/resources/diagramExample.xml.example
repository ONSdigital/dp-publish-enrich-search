<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:kafka-int="http://www.springframework.org/schema/integration/kafka"
       xmlns:http-jms="http://www.springframework.org/schema/integration/jms"
       xmlns:int="http://www.springframework.org/schema/integration"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/integration/kafka http://www.springframework.org/schema/integration/kafka.xsd">
    <!-- ************************************************ -->
    <!--  THIS IS AN EXAMPLE AND HAS NOT BEEN TESTED      -->
    <!--  Used to generate the diagrams                   -->
    <!-- ************************************************ -->
    <kafka-int:message-driven-channel-adapter auto-startup="false" channel="adapterToTransformer"
                                              listener-container="container1"/>

    <bean id="container1" class="org.springframework.kafka.listener.KafkaMessageListenerContainer">
        <constructor-arg index="0">

            <bean class="org.springframework.kafka.core.DefaultKafkaConsumerFactory">
                <constructor-arg>
                    <map>
                        <entry key="bootstrap.servers" value="localhost:9092"/>
                    </map>
                </constructor-arg>
            </bean>
        </constructor-arg>
        <constructor-arg index="1">
            <bean class="org.springframework.kafka.listener.config.ContainerProperties">
                <constructor-arg>
                    <value>TopicName</value>
                </constructor-arg>
            </bean>
        </constructor-arg>

    </bean>

    <!--<http-int:inbound-gateway id="httpRestInboundEndpoint" request-channel="adapterToTransformer"/>-->
    <!--<http-jms:message-driven-channel-adapter id="jmsRestInboundEndpoint" channel="adapterToTransformer"/>-->

    <!--<http-jms:message-driven-channel-adapter id="kakfaRestInboundEndpoint" channel="adapterToTransformer"/>-->

    <!--<http-ws:inbound-gateway id="soapInboundEndpoint" request-channel="adapterToTransformer"/>-->
    <int:transformer id="transformToRequests" ref="requestTransformer"
                     input-channel="adapterToTransformer"
                     output-channel="transformedToLoadService"/>

    <int:service-activator id="loadDocumentService" input-channel="transformedToLoadService"
                           output-channel="loadedToSplitter" ref="documentLoaderService"/>

    <int:splitter id="splitToIndividualResources" input-channel="loadedToSplitter" output-channel="splitToEnrichment"/>

    <int:channel id="splitToEnrichment">
        <int:dispatcher task-executor="taskExecutor"/>
    </int:channel>

    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="12"/>
        <property name="maxPoolSize" value="12"/>
    </bean>

    <int:service-activator id="enrichmentService" input-channel="splitToEnrichment" output-channel="enrichedToUpsert"
                           ref="enrichService"/>

    <int:service-activator id="upsertService" input-channel="enrichedToUpsert" ref="persistService"/>

    <bean id="requestTransformer" class="com.github.onsdigital.index.enrichment.model.transformer.RequestTransformer"/>
    <bean id="documentLoaderService" class="com.github.onsdigital.index.enrichment.service.DocumentLoaderService"/>
    <bean id="enrichService" class="com.github.onsdigital.index.enrichment.service.EnrichmentService"/>
    <bean id="persistService" class="com.github.onsdigital.index.enrichment.service.UpsertService"/>

</beans>